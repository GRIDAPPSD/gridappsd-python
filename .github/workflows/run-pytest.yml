name: Run All Pytests

on:
  push:
    branches:
    - develop
    - releases/**
  pull_request:
    branches:
    - main
    - develop
    - releases/**

jobs:
  build:
    # runs-on must be a single non-matrixed image
    runs-on: ubuntu-18.04
    # , ubuntu-20.04]
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install gridappsd-python
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
          source $HOME/.poetry/env
          poetry build
          poetry install

      - name: Run pytest
        env:
          GRIDAPPSD_USER: ${{ secrets.GRIDAPPSD_USER }}
          GRIDAPPSD_PASSWORD: ${{ secrets.GRIDAPPSD_PASSWORD }}
        run: |
          source $HOME/.poetry/env
          poetry run pytest -s -o junit_family=xunit1 --junitxml=output/test-${{ matrix.python-version }}-results.xml

      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-report
          path: output/test-${{ matrix.python-version }}-results.xml

#--cov=com --cov-report=xml --cov-report=html
# pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
